# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input CreateProductInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input CreateUserInput {
  email: String!
  name: String!
  password: String!
  role: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input LoginInput {
  email: String!
  password: String!
}

type LoginResponse {
  message: String!
  user: UserWithoutPassword!
}

type LogoutResponse {
  message: String!
}

type Mutation {
  createProduct(createProductInput: CreateProductInput!): Product!
  createUser(createUserInput: CreateUserInput!): String!
  login(loginInput: LoginInput!): LoginResponse!
  logout: LogoutResponse!
  removeProduct(id: Int!): Product!
  removeUser(id: Int!): User!
  updateProduct(updateProductInput: UpdateProductInput!): Product!
  updateUser(updateUserInput: UpdateUserInput!): String!
  uploadSingleFile(file: Upload!): UploadResponse!
}

type Product {
  """Example field (placeholder)"""
  exampleField: Int!
}

type Query {
  me: UserWithoutPassword!
  product(id: Int!): Product!
  products: [Product!]!
  user(id: Int!): User!
  users: [User!]!
}

input UpdateProductInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input UpdateUserInput {
  avatar: String
  created_at: DateTime
  dob: DateTime
  email: String
  gender: String
  id: ID
  name: String
  password: String
  phone: String
  role: String
  updated_at: DateTime
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type UploadResponse {
  access_mode: String!
  bytes: Float!
  created_at: String!
  etag: String!
  format: String!
  height: Float!
  original_filename: String!
  pages: Float!
  placeholder: Boolean!
  public_id: String!
  resource_type: String!
  secure_url: String!
  signature: String!
  tags: [String!]!
  type: String!
  url: String!
  version: Float!
  width: Float!
}

type User {
  avatar: String!
  created_at: DateTime!
  dob: DateTime
  email: String!
  gender: String
  id: ID!
  name: String!
  password: String!
  phone: String
  role: String
  updated_at: DateTime!
}

type UserWithoutPassword {
  avatar: String!
  created_at: DateTime!
  dob: DateTime
  email: String!
  gender: String
  id: ID!
  name: String!
  phone: String
  role: String
  updated_at: DateTime!
}